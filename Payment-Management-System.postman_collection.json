{
	"info": {
		"_postman_id": "136215b3-1cb0-41ae-9bef-c708d4db18a3",
		"name": "Payment-Management-System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28546206"
	},
	"item": [
		{
			"name": "Tools",
			"item": [
				{
					"name": "/tools",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 1002,\r\n    \"name\": \"tester\",\r\n    \"email\": \"tester@email.com\",\r\n    \"cardNumber\": \"5569000000006063\",\r\n    \"cvv\": \"010\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{tools}}/tools",
							"host": [
								"{{tools}}"
							],
							"path": [
								"tools"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tools/cart",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transaction_id\": \"ba39c63c-33c3-4377-a264-1f9ee103e10c\",\r\n    \"product_id\": 7,\r\n    \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{tools}}/tools/cart",
							"host": [
								"{{tools}}"
							],
							"path": [
								"tools",
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tools/:transactionId/chargeback",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{tools}}/tools/c053b505-5315-48ca-8c4f-030331f68fd6/chargeback",
							"host": [
								"{{tools}}"
							],
							"path": [
								"tools",
								"c053b505-5315-48ca-8c4f-030331f68fd6",
								"chargeback"
							]
						}
					},
					"response": []
				},
				{
					"name": "/tools",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{tools}}/tools",
							"host": [
								"{{tools}}"
							],
							"path": [
								"tools"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "people_management",
			"item": [
				{
					"name": "/clients/:id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"mudou\",\r\n    \"email\":\"hahe@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{people_management}}/clients/2",
							"host": [
								"{{people_management}}"
							],
							"path": [
								"clients",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/clients/:id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{people_management}}/clients/2",
							"host": [
								"{{people_management}}"
							],
							"path": [
								"clients",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/clients/email/:email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{people_management}}/clients/email/tester@email.com",
							"host": [
								"{{people_management}}"
							],
							"path": [
								"clients",
								"email",
								"tester@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "/clients/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{people_management}}/clients/1",
							"host": [
								"{{people_management}}"
							],
							"path": [
								"clients",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "inventory",
			"item": [
				{
					"name": "/products/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Boi\",\n    \"amount\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{inventory}}/products/1",
							"host": [
								"{{inventory}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "/products/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{inventory}}/products/1",
							"host": [
								"{{inventory}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "/products/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{inventory}}/products/1",
							"host": [
								"{{inventory}}"
							],
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}